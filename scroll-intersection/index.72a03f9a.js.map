{"mappings":"AAAA,MAAMA,EAAWC,SAASC,iBAAiB,YAQrCC,GAPeF,SAASG,cAAc,cAO3B,IAAIC,sBAAqB,SAAUC,EAASC,GAC5DD,EAAQE,SAASC,IAChBC,QAAQC,IAAIF,GACPA,EAAMG,iBAGXH,EAAMI,OAAOC,UAAUC,IAAI,WAC3BR,EAASS,UAAUP,EAAMI,cAZX,CACfI,UAAW,EACXC,WAAY,wBAcblB,EAASQ,SAAO,CAAEW,EAASC,KACtBA,EAAM,GAAM,EACfD,EAAQL,UAAUC,IAAI,aAEtBI,EAAQL,UAAUC,IAAI,cAEvBZ,EAASkB,QAAQF","sources":["src/script.js"],"sourcesContent":["const sections = document.querySelectorAll('.section');\nconst appContainer = document.querySelector('.container');\n\nconst options = {\n\tthreshold: 0,\n\trootMargin: '0px 0px -200px 0px',\n};\n\nconst observer = new IntersectionObserver(function (entries, observer) {\n\tentries.forEach((entry) => {\n\t\tconsole.log(entry);\n\t\tif (!entry.isIntersecting) {\n\t\t\treturn;\n\t\t}\n\t\tentry.target.classList.add('inverse');\n\t\tobserver.unobserve(entry.target);\n\t});\n}, options);\n\nsections.forEach((section, idx) => {\n\tif (idx % 2 === 0) {\n\t\tsection.classList.add('keep-left');\n\t} else {\n\t\tsection.classList.add('keep-right');\n\t}\n\tobserver.observe(section);\n});\n"],"names":["$0b99649c87c61f2a$var$sections","document","querySelectorAll","$0b99649c87c61f2a$var$observer","querySelector","IntersectionObserver","entries","observer","forEach","entry","console","log","isIntersecting","target","classList","add","unobserve","threshold","rootMargin","section","idx","observe"],"version":3,"file":"index.72a03f9a.js.map"}